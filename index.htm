<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />

<meta name='HandheldFriendly' content='True' />
<meta name='viewport' content='width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0' />


<title>Sprite3D.js, a javascript library for 3D positionning in WebKit</title>

<!--
<link rel="stylesheet" href="styles.css" media="screen">
<script src="jquery-1.6.1.min.js" type="text/javascript"></script>
<script src="logs.js" type="text/javascript"></script>
-->
		
<!-- =========================================================== -->		
<!-- CSS SECTION =============================================== -->
<!-- =========================================================== -->

<style>
		
html, body { /*height: 100%;*/ }

body {
	background-color: white;
	color: black;
	margin: 0px auto;
	max-width: 850px;
	padding: 0px;
	padding-bottom: 50px;
	font-family: "Lucida Grande", Geneva, Verdana, Arial, sans-serif;
	line-height: 1.6em;
}

h1, h2 {
	text-shadow: 0px 2px 0px #DDDDDD;
	filter: dropshadow(color=#ffffff, offx=0, offy=2);
}

h1 {
	text-align: center;
	font-size: 4em;
	padding: .5em;
	margin: 0px;
	margin-bottom: 40px;
	color: #DD3333;
	
}

h2 {
	padding: 10px 0px;
	margin: 40px 0px 20px 0px;
	width: 100%;
	text-indent: 20px;
	color: #DD3333;
	border-bottom: 1px solid #DD3333;
	clear: both;
}

p.baseline {
	margin: 0px;
	margin-top: -40px;
	padding: 0px;
	text-align: center;
	/*background: #555;*/
}

ul, p {
	margin: 1em auto;
}

p { padding: 0px 20px; }
/*
ul.features li {
	margin: 15px;
}
*/
ul.examples {
	list-style-type:none;
	/*text-align: center;*/
	/*margin: 0px auto; 
	padding: 0px; */
	padding: 0px;
}

ul.examples li {
	/*margin: 20px 20px;*/
	/*display: inline-block;*/
	clear: both;
	margin: 40px 20px;
	border-top: 1px solid #FFF;
}

ul.examples li a, ul.examples li a h3 {
	color: #000;
	text-decoration: none;
}

ul.examples li img {
	float: left;
	margin: 20px 20px 20px 0px;
}

a img {
	
     -moz-border-radius: 12px; 
  -webkit-border-radius: 12px; 
          border-radius: 12px; 
  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;

	/* border: 1px solid #DDBBBB; */
}
/*
div.overview {
	-moz-column-count: 2;
	-moz-column-gap: 20px;
	-webkit-column-count: 2;
	-webkit-column-gap: 20px;
	column-count: 2;
	column-gap: 20px;
}
*/			
</style>

</head>

<!-- =========================================================== -->		
<!-- HTML BODY ================================================= -->
<!-- =========================================================== -->

<body>
	
	<h1>Sprite3D.js</h1>
	<p class="baseline">A simple javascript library <br/>to help making things move in 3D space<br/>in webkit browsers using CSS transforms.</p>
	
	
	<h2>Overview</h2>
	<div class="overview">
	<p>Sprite3D wraps HTML elements with the necessary behaviours to easily control their <b>3D-position using a simple Javascript syntax</b>. To create a Sprite object, you can either supply an existing DOM object or let the library create an empty <code>&lt;div&gt;</code> (you can apply a CSS class to the DOM element after it's creation).</p>
	
	<p>As you manipulate "real" HTML elements, you don't need a <code>&lt;canvas&gt;</code> object (and it's performance problems), nor a WebGL-enabled browser. And, as 3D transforms are hardware-accelerated, you can get a very decent framerate, even on (Apple's) mobile devices.</p>
	
	<p>At this stage of development, 3D positionning is achieved via WebKit's CSS 3D transforms, restricting the library usage to <b>Chrome and Safari</b> browsers, as well as <b>iOS's Mobile Safari</b>. However, due to it's wrapping, non-intrusive nature, it allows to build semantically valid HTML pages, adding the animation layer afterwards, achieving a valuable progressive enhancement effect.</p>
	
	<p>Sprite3D.js has <b>no dependencies</b>, so it can easily be integrated with other JS libs. We recommend using the requestAnimationFrame technique
	(when available, see in the examples) for a more browser-friendly result.</p>
	</div>
	
	<h2>Features</h2>
	<ul class="features">
		<li>AS3-style <b>properties</b> : 
<pre>	x, y, z
	rotationX, rotationY, rotationZ
	width, height
	alpha</pre></li>
		<li>AS3-style <b>scenography</b> via the <code>addChild()</code> and <code>removeChild()</code> method, children inheriting of their parent's transformations
		<li>JS-style method <b>chaining</b> :
			<pre>new Sprite3D()
	.setPosition(x,y,z)
	.setRotation(rx,ry,rz)
	.setClassName('class')
	.update();</pre></li>
	</ul>
	
	<h2>Examples</h2>
	<ul class="examples">
		
		<li>
			<a href="examples/basicExample.htm">
				<img src="home/basic.png" />
				<h3>Hello World</h3>
			</a>
			<p>Basic example, showing how to create a root container, add a single Sprite3D object, apply a CSS class and x-axis rotation.</p>
		</li>
		
		<li>
			<a href="examples/basicHierarchyExample.htm">
				<img src="home/basic2.png" />
				<h3>Hello World 3D</h3>
			</a>
			<p>A more advanced version of the first example. A simple 3D object is create using four faces, then animated using it's container's 3D rotation methods.</p>
		</li>
		
		<li>
			<a href="examples/titleExample.htm">
				<img src="home/title.jpg" />
				<h3>Particles (kind of)</h3>
			</a>
			<p>Two containers, some png's, some more pure CSS divs, and rotations all the way.</p>
		</li>
		
		<li>
			<a href="examples/tweenExample.htm">
				<img src="home/tweens.png" />
				<h3>Tweening example</h3>
			</a>
			<p>Showing how to tween positions and rotations using <a href="https://github.com/gskinner/TweenJS">TweenJS</a>.</p>
		</li>
		
		<li>
			<a href="examples/eventsExample.htm">
				<img src="home/nyantouch.jpg" />
				<h3>Events example</h3>
			</a>
			<p>This might be the base for a simple point-and-touch game for the iPad. </p>
		</li>
		
		<li>
			<a href="examples/psycheExample.htm">
				<img src="home/psyche.png" />
				<h3>Round corners example</h3>
			</a>
			<p>This example is inspired by <a href="http://paperjs.org/examples/rounded-rectangles/">this one from paperjs</a>. It offers a good comparison between canvas- and DOM-based animation framerates.</p>
		</li>
		
		<li>
			<a href="examples/flowerExample.htm">
				<img src="home/flower.png" />
				<h3>Flower</h3>
			</a>
			<p>A bit of recursive hierarchy, CSS classes and a simple rotation. That's all it takes to build a flower. The flower parameters are slightly randomized.</p>
		</li>	
		
		<li>
			<a href="examples/hoverFlowerExample.htm">
				<img src="home/flower.png" />
				<h3>Hover-Flower</h3>
			</a>
			<p>Same as above, but it mutates randomly when hovered or touched.</p>
		</li>		
		
		<li>
			<a href="examples/galleryExample.htm">
				<img src="home/gallery.jpg" />
				<h3>3D image gallery</h3>
			</a>
			<p>A classic use of 3D positionning for a spatial image gallery.</p>
		</li>
		
		<li>
			<a href="examples/skyBoxExample.htm">
				<img src="home/skybox.jpg" />
				<h3>Skybox demo</h3>
			</a>
			<p>Use a panoramic image to build a skybox cube.</p>
		</li>
	</ul>
	
	<h2>Download</h2>
	<p>Get <a href="https://github.com/boblemarin/Sprite3D.js">the full project source code on GitHub</a>, or just grab <a href="js/Sprite3D.js">Sprite3D.js here</a>.</p>
	
	<h2>Reference</h2>
	<p>The source code has been commented using the jsDoc syntax. Here is <a href="jsdoc/symbols/Sprite3D.html">the generated reference page</a>.</p>
	
	<h2>Future plans</h2>
	<ul>
		<li>Support for more browsers</li>
		<li>Support for animated sprites using sprite sheets as background image</li>
		<li><strike>Providing a decent solution for event handling (right now, it requires iterating through the Sprite's list to find the Sprite associated to the DOM element)</strike> Stabilise the event handling system.</li>
	</ul>

	<h2>Credits</h2>
	<p>Sprite3D.js has been created by <a href="http://www.minimal.be/">boblemarin</a> (<a href="http://twitter.com/#!/boblemarin">@</a>)</p>
	<p>Thanks to <a href="https://github.com/gskinner/TweenJS/">Grant Skinner's TweenJS</a>, <a href="https://github.com/mrdoob/stats.js">MrDoob's Stats utility</a>, <a href="http://paulirish.com/2011/requestanimationframe-for-smart-animating/">Paul Irish's requestAnimationFrame code</a>.</p>
	
	<p><a href="http://twitter.com/share" class="twitter-share-button" data-count="horizontal" data-via="boblemarin">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script></p>
	
	<script type="text/javascript">
	var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
	document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
	</script>
	<script type="text/javascript">
	try {
	var pageTracker = _gat._getTracker("UA-9528692-4");
	pageTracker._trackPageview();
	} catch(err) {}</script>
	
</body>
</html>